
/*
Author: Jingren Wang
Class: ECE6122
Last Date Modified: 2020/10/27
Description:
This is the header file for ghost.cpp.
*/

#include <iostream>
#include <GL/glut.h> // Include the GLUT header file
#include <stdio.h>
#include <math.h>
#include <stdlib.h> // standard definitions
#include <vector>
#include <chrono>
#include <thread>
#include <queue>

using namespace std;


struct note {
	double x = 0;
	double z = 0;
	int f = -1;//father node
	int s = 0;//step
	int pos = -1;//post node
};

class Ghost
{
public:

	//actual position of ghost
	double next_X, next_Z, Yposition;
	//postion of ghost in home
	double start_X, start_Z;
	//sequence
	int seq;
	//ghost state
	bool ready = false;
	Ghost(double x, double y,double z,int seq);
	// draw different color ghost
	void drawGhostRed();
	void drawGhostPink();
	void drawGhostGreen();
	void drawGhostOrange();


	//get and set route of DFS in shortest func
	double getroute(double x,double z, double way[418][3]);
	void  setRoute(double x, double z, double way[418][3], double data);
	//ghost whether got killed
	bool killed(double x,double z);
	void reset(int i);
	//move to start position
	void startmove(int i);
	void Init();
	//chose the path of ghost
	void MovePath(const pair<double, double>& ghostPosition, const pair<double, double>& pmPosition);
	//DFS func
	int shortestpath(const pair<double, double>& start, const pair<double, double>& end);
	//whether catch pacman
	bool Ifcatch(double pmx, double pmz);



	//ghost thread
	thread ghostThread;

	//0 is passable 1 is not accessible
	double routes[420][3] = 
   {
{-7,-9,1},{-6,-9,1},{-5,-9,1},{-4,-9,1},{-3,-9,1},{-2,-9,1},{-1,-9,1},{-0,-9,1},{1,-9,1},{2,-9,1},{3,-9,1},{4,-9,1},{5,-9,1},{6,-9,1},{7,-9,1},
{8,-9,1},{9,-9,1},{10,-9,1},{11,-9,1},// line0

{-7.0,-8.0,1},{-6.0,-8.0,0},{-5.0,-8.0,0} ,{-4.0,-8.0,0},{-3.0,-8.0,0},{-2.0,-8.0,0},{-1.0,-8.0,0},{0,-8.0,0},//line 1
{1.0,-8.0,0},{2.0,-8.0,1},{3.0,-8.0,0},{4.0,-8.0,0},{5.0,-8.0,0}, {6.0,-8.0,0}, 
{7.0,-8.0,0}, {8.0,-8.0,0},{9.0,-8.0,0}, {10.0,-8.0,0},{11.0,-8.0,1},

{-7.0,-7.0,1},{-6.0,-7.0,0},{-5.0,-7.0,1},{-4.0,-7.0,1},{-3.0,-7.0,0},{-2.0,-7.0,1},{-1.0,-7.0,1},{0.0,-7.0,1},//line 2
{1,-7.0,0},{2.0,-7.0,1},{3.0,-7.0,0},{4.0,-7.0,1},{5.0,-7.0,1},{6.0,-7.0,1},{7.0,-7.0,0},{8.0,-7.0,1},{9.0,-7.0,1},{10.0,-7.0,0},{11.0,-7.0,1},

{-7.0,-6.0,1},{-6.0,-6.0,0},{-5.0,-6.0,1},{-4.0,-6.0,1},{-3.0,-6.0,0},{-2.0,-6.0,1},{-1.0,-6.0,1},{0.0,-6.0,1},//line 3
{1,-6.0,0},{2.0,-6.0,1},{3.0,-6.0,0},{4.0,-6.0,1},{5.0,-6.0,1},{6.0,-6.0,1},{7.0,-6.0,0},{8.0,-6.0,1},{9.0,-6.0,1},{10.0,-6.0,0},{11.0,-6.0,1},

{-7.0,-5.0,1},{-6.0,-5.0,0},{-5.0,-5.0,0},{-4.0,-5.0,0},{-3.0,-5.0,0},{-1.0,-5.0,0},//line 4
{-2.0,-5.0,0},{0,-5.0,0},{2.0,-5.0,0},{1.0,-5.0,0},{3.0,-5.0,0},{4.0,-5.0,0},{5.0,-5.0,0},{6,-5.0,0},{7,-5.0,0},{9,-5.0,0},{8,-5.0,0},{10,-5.0,0},
{11,-5.0,1},

{-7.0,-4.0,1},{-6.0,-4.0,0},{-5.0,-4.0,1} ,{-4.0,-4.0,1} ,{-3.0,-4.0,0}, {-2.0,-4.0,1} ,{-1.0,-4.0},{0.0,-4.0,1},//line 5
{1.0,-4.0,1},{2.0,-4.0,1},{3.0,-4.0,1},{4.0,-4.0,1},{5.0,-4.0,0},{6.0,-4.0,1},{7.0,-4.0,0},{8.0,-4.0,1},{9.0,-4.0,1},{10.0,-4.0,0},{11.0,-4.0,1},

{-7.0,-3.0,1},{-6.0,-3.0,0},{-5.0,-3.0,0},{-4.0,-3.0,0},{-3.0,-3.0,0},{-2,-3.0,1},{-1,-3.0,0},{0,-3.0,0},{1,-3.0},{2,-3.0,1},//line 6 
{4,-3.0,0},{3,-3.0,0},{5,-3.0,0},{6,-3.0,1},{7,-3.0,0},{8,-3.0,0},{9,-3.0,0},{10,-3.0,0},{11,-3.0,1},

{-7.0,-2.0,1},{-6.0,-2.0,1},{-5.0,-2.0,1}, {-4.0,-2.0,1},{-3.0,-2.0,0},{-2.0,-2.0,1},{-1,-2.0,1},{0,-2.0,1},{1,-2.0,0},{2,-2.0,0},
{3,-2.0,0},{4,-2.0,1},{5,-2.0,1},{6,-2.0,1},{7,-2.0,0},{8,-2.0,1},{9,-2.0,1},{10,-2.0,1},{11,-2.0,1},//line 7 


{-7.0,-1.0,1},{-6.0,-1.0,1},{-5.0,-1.0,1},{-4.0,-1.0,1},{-3.0,-1.0,0},{-2,-1.0,1},{-1,-1.0,0},{0,-1.0,0},{1,-1.0,0},//line 8
{1,-1.0,0},{2,-1.0,0},{3,-1.0,0},{4,-1.0,0},{5,-1.0,0},{6,-1.0,1},{7,-1.0,0},{8,-1.0,1},{9,-1.0,1},{10,-1.0,1},{11,-1.0,1},
	
{-7,0.0,1},{-6,0.0,1},{-5,0.0,1},{-4,0.0,1},{-3,0.0,0},{-2,0.0,1},{-1,0.0,0},{0,0.0,1},{1,0.0,1},{2,0.0,1},{3,0.0,1},{4,0.0,1},//line9
{5,0.0,0},{6,0.0,1},{7,0.0,0},{8,0.0,1},{9,0.0,1},{10,0.0,1},{11,0.0,1},

/*{-8,1.0,0},*/{-7,1.0,0},{-6,1.0,0},{-5,1.0,0},{-4,1.0,0},{-3,1.0,0},{-2,1.0,0},{-1,1.0,0},{0,1.0,1},{1,1.0,1},{2,1.0,1},{3,1.0,1},{4,1.0,1},//line10
{5,1.0,0},{6,1.0,0},{7,1.0,0},{8,1.0,0},{9,1.0,0},{10,1.0,0},{11,1.0,0},/*{12,1.0,0},*/

{-7.0,2.0,1},{-6.0,2.0,1},{-6.0,2.0,1},{-4.0,2.0,1},{-3.0,2.0,0},{-2.0,2.0,1},{-1.0,2.0,0},{0.0,2.0,1}, {1.0,2.0,1},{2.0,2.0,1},//line11
{3.0,2.0,1},{4.0,2.0,1},{5.0,2.0,0},{6.0,2.0,1},{7.0,2.0,0},{8.0,2.0,1},{9.0,2.0,1},{10.0,2.0,1},{11.0,2.0,1},


{-7,3.0,1},{-6,3.0,1},{-5,3.0,1},{-4,3.0,1},{-3,3.0,0},{-1,3.0,0},{-2,3.0,1},{0,3.0,0},{1,3.0,0},{2,3.0,0},{3,3.0,0},//line12
{4,3.0,0},{5,3.0,0},{6,3.0,1},{7,3.0,0},{8,3.0,1},{9,3.0,1},{10,3.0,1},{11,3.0,1},

{-7,4.0,1},{-6,4.0,1},{-5,4.0,1},{-4,4.0,1},{-3,4.0,0},{-1,4.0,0},{-2,4.0,1},{0,4.0,1},{1,4.0,1},{2,4.0,1},{3,4.0,1},//line13
{4,4.0,1},{5,4.0,0},{6,4.0,1},{7,4.0,0},{8,4.0,1},{9,4.0,1},{10,4.0,1},{11,4.0,1},

{-7,5.0,1},{-6,5.0,0},{-5,5.0,0},{-4,5.0,0},{-3,5.0,0},{-2,5.0,0},{-1,5.0,0},{0,5.0,0},{1,5.0,0},{2,5.0,1},{3,5.0,0},//line14
{4,5.0,0},{5,5.0,0},{6,5.0,0},{7,5.0,0},{8,5.0,0},{9,5.0,0},{10,5.0,0},{11,5.0,1},

{-7,6.0,1},{-6,6.0,0},{-5,6.0,1},{-4,6.0,1},{-3,6.0,0},{-2,6.0,1},{-1,6.0,1},{0,6.0,1},{1,6.0,0},{2,6.0,1},{3,6.0,0},{4,6.0,1},//line15
{5,6.0,1},{6,6.0,1},{7,6.0,0},{8,6.0,1},{9,6.0,1},{10,6.0,0},{11,6.0,1},

{-7,7.0,1},{-6,7.0,0},{-5,7.0,0},{-4,7.0,1},{-3,7.0,0},{-2,7.0,0},{-1,7.0,0},{0,7.0,0},{1,7.0,0},{2,7.0,0},{3,7.0,0},{4,7.0,0},//line16
{6,7.0,0},{7,7.0,0} ,{8,7.0,1},{9,7.0,0},{10,7.0,0},{11,7.0,0},

{-7,8.0,1},{-6,8.0,1}, {-5,8.0,0},{-4,8.0,1},{-3,8.0,0},{-2,8.0,1},{-1,8.0,0},{0,8.0,1},{1,8.0,1},{2,8.0,1},{3,8.0,1},{4,8.0,1},//line17
{5,8.0,0},{6,8.0,1},{7,8.0,0},{8,8.0,1},{9,8.0,0},{10,8.0,1},{11,8.0,1},

{-7,9.0,1},{-6,9.0,0},{-5,9.0,0},{-4,9.0,0},{-3,9.0,0},{-2,9.0,1},{-1,9.0,0},{0,9.0,0},{1,9.0,0},{2,9.0,1},{3,9.0,0},{4,9.0,0},//line18
{5,9.0,0},{6,9.0,1},{7,9.0,0},{8,9.0,0},{9,9.0,0},{10,9.0,0},{11,9.0,1},

{-7,10.0,1},{-6,10.0,0},{-5,10.0,1},{-4,10.0,1},{-3,10.0,1},{-2,10.0,1},{-1,10.0,1},{0,10.0,1},{1,10.0,0},{2,10.0,1},{3,10.0,0},//line19
{4,10.0,1},{5,10.0,1},{6,10.0,1},{7,10.0,1},{8,10.0,1},{9,10.0,1},{10,10.0,0},{11,10.0,1},

{-7,11.0,1},{-6,11.0,0},{-5,11.0,0},{-4,11.0,0},{-3,11.0,0},{-2,11.0,0},{-1,11.0,0},{0,11.0,0},{1,11.0,0},{2,11.0,0},{3,11.0,0},//line20
{4,11.0,0},{5,11.0,0},{6,11.0,0},{7,11.0,0},{8,11.0,0},{9,11.0,0},{10,11.0,0},{11,11.0,1},

{-7,12.0,1},{-6,12.0,1},{-5,12.0,1},{-4,12.0,1},{-3,12.0,1},{-2,12.0,1},{-1,12.0,1},{0,12.0,1},{1,12.0,1},{2,12.0,1},{3,12.0,1},//line21
{4,12.0,1},{5,12.0,1},{6,12.0,1},{7,12.0,1},{8,12.0,1},{9,12.0,1},{10,12.0,1},{11,12.0,1},
	};
	// runawat state
	bool runAway = false;

private:
	GLUquadricObj* quadratic = gluNewQuadric();// initlize the quadratic



};


