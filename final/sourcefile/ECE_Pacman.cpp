/*
Author: Jingren Wang
Class: ECE6122
Last Date Modified: 2020/10/27
Description:
This is the cpp file for pacman, its function is to draw pacman and paint color.
*/
#include "ECE_Pacman.h"

#include <stdio.h>
#include <math.h>
#include <stdlib.h> // standard definitions



//draw pacman
void Pacman::drawPacman()
{


    glColor3f(1, 1, 0); // yellow
    glPushMatrix();
    glTranslatef(this->xPosition, 0, this->zPosition);
    glutSolidSphere(0.45, 20, 20);//create pacman
    glPopMatrix();
}
//pacman move func
void Pacman::move(int position)
{
	switch (position)
	{
	case 0:
		if (Pacman::upedge(this->zPosition,this->xPosition))
		{
			break;
		}	
		this->zPosition -= 1;
		break;
	case 1:
		if (Pacman::downedge(this->zPosition, this->xPosition))
		{
			break;
		}
		this->zPosition += 1;
	
		break;
	case 2:
		if (Pacman::leftedge(this->xPosition, this->zPosition))
		{
			break;
		}
		this->xPosition -= 1;
		
		break;
	case 3:
		if (Pacman::rightedge(this->xPosition, this->zPosition))
		{
			break;
		}
		this->xPosition += 1;
		
		break;
	}
}
// four directions of the edge 
bool Pacman::upedge(double zposition, double xpositon)
{
	double edge[90][2] = {{-6.0,-8.0},{-5.0,-8.0},{-4.0,-8.0},{-3.0,-8.0},{-2.0,-8.0},{-1.0,-8.0},{0,-8.0},{1.0,-8.0},//line 1
{3.0,-8.0},{4.0,-8.0},{5.0,-8.0}, {6.0,-8.0}, {7.0,-8.0}, {8.0,-8.0},{9.0,-8.0}, {10.0,-8.0},
{-5.0,-5.0},{-4.0,-5.0},//line 4
{-2.0,-5.0},{-1.0,-5.0},{0,-5.0},{2.0,-5.0},{4.0,-5.0},{5.0,-5.0},{6,-5.0},{9,-5.0},{8,-5.0},
{-5.0,-3.0},{-4.0,-3.0},{0,-3.0},{1,-3.0},{3,-3.0},{4,-3.0},{8,-3.0},{9,-3.0},//line 6 
{-1.0,-1.0},{0,-1.0},{0,-1.0},{2,-1.0},{4,-1.0},{5,-1.0},//line 8
{-2,1.0},{6,1.0},{0,3.0 }, { 1,3.0 }, { 2,3.0 }, { 3,3.0 }, { 4,3.0 },//line 10&&12
{-6,5.0},{-4,5.0},{-5,5.0},{-2,5.0},{0,5.0},{1,5.0},{3,5.0},{4,5.0},{6,5.0},{9,5.0},{10,5.0},{8,5.0},//line 14
{-5,7.0},{-2,7.0},{-1,7.0},{0,7.0},{2,7.0},{4,7.0},{5,7.0},{6,7.0},{9,7.0},//line 16
{-6,9.0},{-4,9.0},{0,9.0},{1,9.0},{3,9.0},{4,9.0},{8,9.0},{10,9.0},//line 18
{-5.0,11},{-4.0,11},{-3.0,11},{-2.0,11},{-1.0,11},{0,11},{2.0,11},//line 20
{4.0,11},{5.0,11}, {6.0,11}, {7.0,11}, {8.0,11},{9.0,11}
	};
	
	for (int i = 0 ; i < 90; ++i)
	{
		if (xpositon == edge[i][0] && zposition == edge[i][1])
		{
			return true;
		}
		if ((xpositon>=8|| xpositon <= -4)&& zposition== 1) 
		{
			return true;
		}
		
	}


	return false;
}

bool Pacman::downedge(double zposition, double xpositon)
{
	double edge[90][2] = { {-5.0,-8.0},{-4.0,-8.0},{-2.0,-8.0},{-1.0,-8.0},{0,-8.0},//line 1
{4.0,-8.0},{5.0,-8.0}, {6.0,-8.0}, {8.0,-8.0},{9.0,-8.0}, 

{-5.0,-5.0},{-4.0,-5.0},//line 4
{-2.0,-5.0},{0,-5.0},{2.0,-5.0},{1.0,-5.0},{3.0,-5.0},{4.0,-5.0},{6,-5.0},{9,-5.0},{8,-5.0},

{-5.0,-3.0},{-6.0,-3.0},{-4.0,-3.0},{-1,-3.0},{0,-3.0},{5,-3.0},{4,-3.0},{8,-3.0},{9,-3.0},{10,-3.0},//line 6 

{1.0,-1.0},{0,-1.0},{2,-1.0},{3,-1.0},{4,-1.0},//line 8

{-2,1.0},{6,1.0},{0,3.0},{1,3.0},{2,3.0},{3,3.0},{4,3.0},//line 10&&12

{-4,5.0},{-5,5.0},{-2,5.0},{-1,5.0},{0,5.0},{5,5.0},{4,5.0},{6,5.0},{9,5.0},{8,5.0},//line 14
{-6,7.0},{-2,7.0},{1,7.0},{0,7.0},{2,7.0},{4,7.0},{3,7.0},{6,7.0},{10,7.0},//line 16
{-5,9.0},{-4,9.0},{-3,9.0},{0,9.0},{-1,9.0},{0,9.0},{7,9.0},{5,9.0},{4,9.0},{8,9.0},{9,9.0},//line 18
{-6.0,11}, {-5.0,11}, {-4.0,11}, {-3.0,11}, {-2.0,11}, {-1.0,11}, {0,11}, {1.0,11}, {2,11}, //line 20
{3,11}, {4,11}, {5,11}, {6,11}, {7,11}, {8,11}, {9,11}, {10,11} 
	};
	for (int i = 0; i < 90; ++i)
	{
		if (xpositon == edge[i][0] && zPosition == edge[i][1])
		{
			return true;
		}if ((xpositon >= 8 || xpositon <= -4) && zposition == 1)
		{
			return true;
		}
	}

	return false;
}

bool Pacman::leftedge(double xpositon, double zposition)
{
	double edge[78][2] = { {-6.0,-8.0},{3.0,-8.0},{-6.0,-7.0},{-3.0,-7.0},{1.0,-7.0},{3.0,-7.0},{7.0,-7.0},{10.0,-7.0},//line1 - line5
{-6.0,-6.0},{-3.0,-6.0},{1.0,-6.0},{3.0,-6.0},{7.0,-6.0},{10.0,-6.0},{-6.0,-5.0},{-6.0,-4.0},{-3.0,-4.0},{-1.0,-4.0},
{5.0,-4.0},{7.0,-4.0},{10.0,-4.0},


{-6.0,-3.0},{-1.0,-3.0},{6,-3.0},{3,-3.0},{7,-3.0},//line 6 

{-3.0,-2.0},{1,-2.0},{2,-2.0},{3,-2.0},{7,-2.0},//line 7 -11

{-3,-1.0},{7,-1.0},{-2,-1.0},{-1,-1.0},{-3,0.0},{5,0.0},{-1,0.0}, {-2,0.0},{7,0.0},
{5,1.0}, {-3,2.0},{-1,2.0},{5,2.0},{7,2.0},
{-3,3.0},{-1,3.0},{7,3.0},{-3,4.0},{-1,4.0},{5,4.0} ,{7,4.0},{-6,5.0},{3,5.0},//line 12-14
{-6,6.0},{-3,6.0},{1,6.0},{3,6.0},{7,6.0},{10,6.0},//line 15

{-6,7.0},{-3,7.0},{9,7.0},//line 16-20
{-5,8.0},{-3,8.0},{-1,8.0},{5,8.0},{7,8.0},{9,8.0},//17
{-6.0,9},  {-1.0,9}, {3,9}, {7,9},  //18
{-6,10},{1,10},{3,10},{10,10},{-6,11}//19-20
	};
	for (int i = 0; i < 80; ++i)
	{
		if (xpositon == edge[i][0] && zPosition == edge[i][1])
		{
			return true;
		}
	}
	return false;
}

bool Pacman::rightedge(double xpositon, double zposition)
{

	double edge[77][2] = { {10.0,-8.0},{1,-8.0},{-6.0,-7.0},{-3.0,-7.0},{1.0,-7.0},{3.0,-7.0},{7.0,-7.0},{10.0,-7.0},//line1 - line5
{-6.0,-6.0},{-3.0,-6.0},{1.0,-6.0},{3.0,-6.0},{7.0,-6.0},{10.0,-6.0},{10.0,-5.0},{-6.0,-4.0},{-3.0,-4.0},{-1.0,-4.0},
{5.0,-4.0},{7.0,-4.0},{10.0,-4.0},

{10.0,-3.0},{-3.0,-3.0},{1,-3.0},{5,-3.0},//line 6 

{-3.0,-2.0},{1,-2.0},{2,-2.0},{3,-2.0},{7,-2.0},//line 7 -11

{-3,-1.0},{7,-1.0},{-2,-1.0},{5,-1.0}, {-3,0.0},{5,0.0},{-1,0.0}, {-2,0.0},{7,0.0},
{-1,1.0}, {-3,2.0},{-1,2.0},{5,2.0},{7,2.0},
{-3,3.0},{-1,3.0},{7,3.0},{-3,4.0},{-1,4.0},{5,4.0} ,{7,4.0},{10,5.0},{1,5.0},//line 12-14
{-6,6.0},{-3,6.0},{1,6.0},{3,6.0},{7,6.0},{10,6.0},//line 15

{-5,7.0},{7,7.0},{10,7.0},//line 16-20
{-5,8.0},{-3,8.0},{-1,8.0},{5,8.0},{7,8.0},{9,8.0},//17
{-3.0,9},  {1.0,9}, {5,9}, {10,9},  //18
{-6,10},{1,10},{3,10},{10,10},{10,11}//19-20
	};
	for (int i = 0; i < 80; ++i)
	{
		if (xpositon == edge[i][0] && zPosition == edge[i][1])
		{
			return true;
		}
	}


	return false;
}




















